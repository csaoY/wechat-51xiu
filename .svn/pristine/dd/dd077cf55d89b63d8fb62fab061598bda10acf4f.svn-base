// pages/assessment/placeorder/placeorder.js
var util = require('../../../utils/util.js')
const _ = require('../../../utils/underscore');
const request = require('../../../utils/request');
const urls = require('../../../utils/urls');

Page({
  data: {
    cityList: [],//城市列表
    areaList: [],//区域列表
    versionName: "",
    cityListIndex: 0,//选中城市列表下标
    areaListIndex: 0,//选中区域列表下标
    selectedPlanList: [],//用户选择的故障列
    totalPrice: 0,//维修总价
    orderFormOK: true, //表单是否准备OK
    couponList: [],//优惠券列表
    totalCouponPrice: 0,//优惠金额
    regulationList:[]//优惠券列表选择限制条件
  },
  onLoad: function (options) {
    console.log('onLoad')
    this.init(options);
    this.loadVersionGetAreaByCode()
  },
  model: function () {
    if (util.isRepeatClick()) return//判断是否为重复点击
    wx.navigateTo({
      url: '/pages/clause/maintenanceclause/maintenanceclause'
    })
  },

  //获取行政区域
  loadVersionGetAreaByCode: function (code = "") {
    var that = this;
    const values = _.extend({ id: "123", channel: 6, content: JSON.stringify({ "code": code }) }, "");
    that.addRQId = request.get(urls.version_getAreaByCode, values, function (data) {
      if (code == '') {
        var cityList = data.areaList;
        that.setData({
          cityListIndex: 0,//重置选中城市列表下标
          cityList: cityList//设置城市列表
        });
        if (typeof cityList[0] != 'undefined') {
          //加载第一个城市的区域
          that.loadVersionGetAreaByCode(cityList[0].code)
        }
      } else {
        var areaList = data.areaList;
        that.setData({
          areaListIndex: 0,//重置选中区域列表下标
          areaList: areaList//设置区域列表
        });
      }
      console.log("获取行政区域接口成功");
    }, this, { isShowLoading: false });
  },
  //城市列表改变
  bindCityPickerChange: function (e) {
    var index = e.detail.value
    console.log('picker发送选择改变，携带值为', e.detail.value)
    this.setData({
      cityListIndex: index
    })
    var cityCode = this.data.cityList[index].code //客户城市编码
    if (cityCode == -1 || cityCode == -2) {//未选择或者选择邮寄维修
      this.setData({
        areaListIndex: 0,//重置选中区域列表下标
        areaList: []//设置区域列表
      });
      return
    }
    this.loadVersionGetAreaByCode(this.data.cityList[this.data.cityListIndex].code)
  },
  //区域列表改
  bindAreaPickerChange: function (e) {
    this.setData({
      areaListIndex: e.detail.value
    })
  },
  init: function (options) {
    // 页面初始化 options为页面跳转所带来的参数
    var totalPrice = options.totalPrice;
    this.data.selectedPlanList = JSON.parse(options.selectedPlanList);
    console.log("接收到的参数是phone=" + this.data.selectedPlanList[0].plan);
    this.setData({
      totalPrice: totalPrice,
      selectedPlanList: this.data.selectedPlanList
    });
  },
  //电话号码输入框内容改变时触发
  bindContactPhoneInput: function (e) {
    var that = this
    var contactPhone = e.detail.value //客户电话号码
    if (!(/^1[34578]\d{9}$/.test(contactPhone))) {
      return
    }
    var pIds = ""//故障ID【必填,多个用逗号隔开】
    for (var i = 0; i < this.data.selectedPlanList.length; i++) {
      pIds += this.data.selectedPlanList[i].id + ","
    }
    if (pIds != "") {
      pIds = pIds.substr(0, pIds.length - 1)
    }
    const values = _.extend({ id: "123" ,channel: 6, content: JSON.stringify({ "phoneNumber": contactPhone, "planIds": pIds }) }, "")
    this.addRQId = request.get(urls.order_coupon, values, function (data) {
      var couponList = data.couponList.map(function (elem) {
        elem.isSelected = false
        return elem
      });
      that.setData({
        couponList: couponList,
        regulationList: data.regulationList,
        totalCouponPrice: 0
      });
      console.log("装载优惠券成功");
    }, that, { isShowLoading: false }
    );
  },
  onSelectCoupon: function(e) {
    var id = e.currentTarget.dataset.id //id
    var coupon_type = e.currentTarget.dataset.coupon_type//优惠券类型：1全场通用，2：指定故障专用券
    var selectedCouponCount = 0//择中的优惠劵数量
    var isSelected = false//是否是择中
     this.data.couponList.forEach(function(element) {
       if(element.isSelected) {
         selectedCouponCount++
       }
       if(id==element.id){
          isSelected = !element.isSelected
        }
     }, this);
     //基于目前后台服务器的数据结构，客户端校验少一点
    if (this.data.selectedPlanList.length==selectedCouponCount && isSelected) {//优惠劵数量达到上限
        wx.showModal({
						content: '对不起，该订单最多只能选用 '+ selectedCouponCount + " 个优惠劵!",
						showCancel: false
					});
        return
    }
    if (this.data.regulationList[0].couponSum==selectedCouponCount && isSelected) {//优惠劵数量达到上限
        wx.showModal({
            content: '对不起，该订单最多只能选用 '+ (selectedCouponCount) + " 个优惠劵!",
						showCancel: false
					});
        return
    }

    this.data.couponList.forEach(function(element) {
       if(element.isSelected) {
         totalCouponPrice += parseInt(element.coupon_price)
       }
     }, this);

    var couponList = this.data.couponList.map(function (elem) {
        if(id==elem.id){
          elem.isSelected = !elem.isSelected
        }
        return elem
     });

     var totalCouponPrice = 0
     couponList.forEach(function(element) {
       if(element.isSelected) {
         totalCouponPrice += parseInt(element.coupon_price)
       }
     }, this);
     this.setData({
        couponList: couponList,
        totalCouponPrice: totalCouponPrice
      });
  },
  //提交维修订单
  submitOrder: function (e) {
    console.log('form发生了submit事件，携带数据为：', e.detail.value)
    var that = this
    var cityIndex = e.detail.value.cityIndex //客户选择城市下标
    this.setData({
      cityIndex: cityIndex
    });
    console.log(that.data.cityIndex)
    var areaCode = "" //客户地区编码【必填】
    var repairType = "0"//0.上门维修1.预约到店2.寄修3.邮寄回收4.上门回收
    if (cityIndex == 1) {//选择邮寄维修
      repairType = 2
    } else {
      if (this.data.areaList.length === 0 || that.data.cityListIndex == 0) {
        wx.showToast({
          title: '请选择地区',
          icon: 'success',
          duration: 2000
        })
        return
      } else {
        areaCode = this.data.areaList[e.detail.value.areaCode].code //客户地区编码【必填】
      }
    }

    var address = e.detail.value.address //详细地址【必填】
    var contactName = e.detail.value.contactName//客户姓名【必填】
    var contactPhone = e.detail.value.contactPhone //客户手机号码【必填】
    var remark = e.detail.value.remark //客户备注【选填】
    var pIds = ""//故障ID【必填,多个用逗号隔开】
    var userAgreement = e.detail.value.userAgreement //客户备注【选填】
    var couponIDs = ""//优惠券id

    if (address.replace(/\s/g, "") == "") {
      wx.showToast({
        title: '请填写详细地址',
        icon: 'success',
        duration: 2000
      })
      return
    }
    if (contactName.replace(/\s/g, "") == "") {
      wx.showToast({
        title: '请填写联系人',
        icon: 'success',
        duration: 2000
      })
      return
    }
    if (!(/^[a-zA-Z ]{1,20}$/.test(contactName)) && !(/^[\u4e00-\u9fa5]{1,10}$/.test(contactName))) {
      wx.showToast({
        title: '请填写正确的联系人名',
        icon: 'success',
        duration: 2000
      })
      return
    }
    if (!(/^1[34578]\d{9}$/.test(contactPhone))) {
      wx.showToast({
        title: '请填写正确的手机号码',
        icon: 'success',
        duration: 2000
      })
      return
    }
    if (userAgreement) {
      this.data.orderFormOK = true
    }
    //计算故障ID字符串
    for (var i = 0; i < this.data.selectedPlanList.length; i++) {
      pIds += this.data.selectedPlanList[i].id + ","
    }
    if (pIds != "") {
      pIds = pIds.substr(0, pIds.length - 1)
    }
    //计算优惠券ID字符串
    for (var i = 0; i < this.data.couponList.length; i++) {
      if(this.data.couponList[i].isSelected) {
        couponIDs += this.data.couponList[i].id + ","
      }
    }
    if (couponIDs != "") {
      couponIDs = couponIDs.substr(0, couponIDs.length - 1)
    }

    if (request.isLoading(that.addRQId)) return;
    const values = _.extend({
      id: "123",
      channel: 6,
      content: JSON.stringify({
        "pIds": pIds,
        areaCode: areaCode,
        address: address,
        contactName: contactName,
        contactPhone: contactPhone,
        remark: remark,
        repairType: repairType,
        phonCouponStr:couponIDs
      })
    }, "");
    that.addRQId = request.post(urls.order_insert, values, function (data) {
      console.log("提交维修订单成功");
      wx.setStorageSync("mailInfo", data.mailInfo); 
      wx.setStorageSync("precautions", data.precautions);
      wx.navigateTo({
        url: '../../last/fixlast/last?orderid=' + data.orderId + '&cityIndex=' + that.data.cityIndex 
      })
    }, this, { isShowLoading: true });
  },
  //用户协议同意
  checkboxChange: function (e) {
    var checked = e.detail.value
    if (checked == "true") {
      this.setData({
        orderFormOK: true
      });
    } else {
      this.setData({
        orderFormOK: false
      });
    }
    console.log('checkbox发生change事件，携带value值为：', e.detail.value)
  }
})